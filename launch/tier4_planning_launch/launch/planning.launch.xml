<launch>
  <!-- planning module -->

  <!-- mission planner -->
  <arg name="mission_planner_param_path"/>
  <!-- parking -->
  <arg name="freespace_planner_param_path"/>
  <!-- planning validator -->
  <arg name="planning_validator_param_path"/>
  <!-- Auto mode setting-->
  <arg name="enable_all_modules_auto_mode"/>
  <arg name="is_simulation"/>

  <!-- Modes Setting -->
  <arg name="global_planning" default="autoware"/>
  <arg name="behavior_component" default="autoware"/>
  <arg name="local_planning" default="autoware"/>

  <group>
    <push-ros-namespace namespace="planning"/>
    <!-- mission planning module -->
    <group if="$(eval &quot;'$(var global_planning)' == 'autoware'&quot;)">
      <push-ros-namespace namespace="mission_planning"/>
      <include file="$(find-pkg-share tier4_planning_launch)/launch/mission_planning/mission_planning.launch.xml">
        <arg name="mission_planner_param_path" value="$(var mission_planner_param_path)"/>
      </include>
    </group>

    <!-- scenario planning module -->
    <group if="$(eval &quot;'$(var behavior_component)' == 'autoware'&quot;)">
      <push-ros-namespace namespace="scenario_planning"/>
      <include file="$(find-pkg-share tier4_planning_launch)/launch/scenario_planning/scenario_planning.launch.xml">
        <arg name="enable_all_modules_auto_mode" value="$(var enable_all_modules_auto_mode)"/>
        <arg name="is_simulation" value="$(var is_simulation)"/>
        <arg name="behavior_component" value="$(var behavior_component)"/>
        <arg name="local_planning" value="$(var local_planning)"/>
      </include>
    </group>

    <!-- Nav2 Planning Pipeline -->
    <group if="$(eval &quot;'$(var global_planning)' == 'nav2_planning' and '$(var behavior_component)' == 'nav2_bt'&quot;)">
      <!-- <include file="$(find-pkg-share lomby_nav2_global_planner)/launch/nav2.launch.py" /> -->
    </group>

    <group if="$(eval &quot;'$(var local_planning)' == 'nav2_controller'&quot;)">
      <include file="$(find-pkg-share autoware_nav2_local_control)/launch/autoware_path_to_nav2_path.launch.py"/>
      <include file="$(find-pkg-share autoware_nav2_local_control)/launch/goal_to_path.launch.py"/>
      <!-- <include file="$(find-pkg-share autoware_nav2_local_control)/launch/nav2_local_control.launch.py"/> -->
      <!-- <include file="$(find-pkg-share autoware_nav2_local_control)/launch/nav2_path_to_autoware_path.launch.py"/> -->
      <include file="$(find-pkg-share autoware_nav2_local_control)/launch/path_optimizer.launch.py"/>
    </group>

    <!-- planning validator -->
    <group>
      <include file="$(find-pkg-share autoware_planning_validator)/launch/planning_validator.launch.xml">
        <arg name="input_trajectory" value="/planning/scenario_planning/velocity_smoother/trajectory"/>
        <arg name="output_trajectory" value="/planning/scenario_planning/trajectory"/>
        <arg name="planning_validator_param_path" value="$(var planning_validator_param_path)"/>
      </include>
    </group>

    <!-- planning evaluator -->
    <group>
      <include file="$(find-pkg-share autoware_planning_evaluator)/launch/planning_evaluator.launch.xml"/>
    </group>

    <!-- mission remaining distance and time calculator -->
    <group>
      <include file="$(find-pkg-share autoware_remaining_distance_time_calculator)/launch/remaining_distance_time_calculator.launch.xml"/>
    </group>
  </group>
</launch>
