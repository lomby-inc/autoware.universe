<?xml version="1.0"?>
<launch>  
  <arg name="vector_map_type" default="lanelet"/>
  <!-- map files -->
  <arg name="pointcloud_map_path"/>
  <arg name="pointcloud_map_metadata_path"/>
  <arg name="lanelet2_map_path"/>
  <arg name="map_projector_info_path"/>

  <!-- Parameter files -->
  <arg name="pointcloud_map_loader_param_path"/>
  <arg name="lanelet2_map_loader_param_path"/>
  <arg name="map_tf_generator_param_path"/>
  <arg name="map_projection_loader_param_path"/>
  <arg name="vector_map_type" default="lanelet"/>

  <!-- whether use intra-process -->
  <arg name="use_intra_process" default="false"/>

  <!-- select container type -->
  <arg name="use_multithread" default="false"/>
  <let name="container_type" value="component_container" unless="$(var use_multithread)"/>
  <let name="container_type" value="component_container_mt" if="$(var use_multithread)"/>

  <!-- Have yet to fix parameter interaction between launch files. When loading normal vector maps should change to vector_map and  vector_map_marker.
  When working with linestring lanelets, It should be forced to  vector_map_linestring and vector_map_linestring_marker.-->
  <!-- <let name="vector_map_topic" value="vector_map"/>
  <let name="vector_map_marker_topic" value="vector_map_marker"/> -->
  <let name="vector_map_topic" value="vector_map_linestring"/>
  <let name="vector_map_marker_topic" value="vector_map_linestring_marker"/>

  <group if="$(eval &quot;'$(var vector_map_type)' == 'lanelet'&quot;)">
    <let name="vector_map_topic" value="vector_map"/>
    <let name="vector_map_marker_topic" value="vector_map_marker"/>
  </group>

  <group if="$(eval &quot;'$(var vector_map_type)' == 'linestring'&quot;)">
    <let name="vector_map_topic" value="vector_map_linestring"/>
    <let name="vector_map_marker_topic" value="vector_map_linestring_marker"/>
  </group>

  <group>
    <push-ros-namespace namespace="map"/>

    <node_container pkg="rclcpp_components" exec="$(var container_type)" name="map_container" namespace="" output="both">
      <composable_node pkg="map_loader" plugin="PointCloudMapLoaderNode" name="pointcloud_map_loader">
        <param from="$(var pointcloud_map_loader_param_path)"/>
        <param name="pcd_paths_or_directory" value="[$(var pointcloud_map_path)]"/>
        <param name="pcd_metadata_path" value="$(var pointcloud_map_metadata_path)"/>
        <remap from="output/pointcloud_map" to="pointcloud_map"/>
        <remap from="output/pointcloud_map_metadata" to="pointcloud_map_metadata"/>
        <remap from="service/get_partial_pcd_map" to="/map/get_partial_pointcloud_map"/>
        <remap from="service/get_differential_pcd_map" to="/map/get_differential_pointcloud_map"/>
        <remap from="service/get_selected_pcd_map" to="/map/get_selected_pointcloud_map"/>
        <extra_arg name="use_intra_process_comms" value="$(var use_intra_process)"/>
      </composable_node>

      <composable_node pkg="map_loader" plugin="Lanelet2MapLoaderNode" name="lanelet2_map_loader">
        <param from="$(var lanelet2_map_loader_param_path)"/>
        <param name="lanelet2_map_path" value="$(var lanelet2_map_path)"/>
        <remap from="output/lanelet2_map" to="$(var vector_map_topic)"/>
        <extra_arg name="use_intra_process_comms" value="$(var use_intra_process)"/>
      </composable_node>

      <composable_node pkg="map_loader" plugin="Lanelet2MapVisualizationNode" name="lanelet2_map_visualization">
        <remap from="input/lanelet2_map" to="$(var vector_map_topic)"/>
        <remap from="output/lanelet2_map_marker" to="$(var vector_map_marker_topic)"/>
        <extra_arg name="use_intra_process_comms" value="$(var use_intra_process)"/>
      </composable_node>

      <composable_node pkg="autoware_map_tf_generator" plugin="autoware::map_tf_generator::VectorMapTFGeneratorNode" name="vector_map_tf_generator">
        <param from="$(var map_tf_generator_param_path)"/>
        <extra_arg name="use_intra_process_comms" value="$(var use_intra_process)"/>
      </composable_node>
    </node_container>

    <node pkg="map_loader" exec="map_hash_generator" name="map_hash_generator">
      <param name="lanelet2_map_path" value="$(var lanelet2_map_path)"/>
      <param name="pointcloud_map_path" value="$(var pointcloud_map_path)"/>
    </node>

    <include file="$(find-pkg-share autoware_map_projection_loader)/launch/map_projection_loader.launch.xml">
      <arg name="param_path" value="$(var map_projection_loader_param_path)"/>
      <arg name="map_projector_info_path" value="$(var map_projector_info_path)"/>
      <arg name="lanelet2_map_path" value="$(var lanelet2_map_path)"/>
    </include>

    <group if="$(eval &quot;'$(var vector_map_type)' == 'linestring'&quot;)">
      <include file="$(find-pkg-share lomby_custom_planner_global)/launch/linestrings_markers_publisher.launch.py"/>
      <include file="$(find-pkg-share lomby_nav2_global_planner)/launch/dummy_boundary_publisher.launch.py"/>
      <include file="$(find-pkg-share lomby_nav2_global_planner)/launch/virtual_lanelet_map.launch.py"/>
    </group>

  </group>
</launch>
